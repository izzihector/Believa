# Copyright (c) 2017 Emipro Technologies Pvt Ltd (www.emiprotechnologies.com). All rights reserved.
import binascii
import requests
from requests.auth import HTTPBasicAuth
from odoo import fields, models, api, _
from odoo.addons.dhl_paket_shipping_ept.dhl_api.dhl_response import Response
from odoo.exceptions import Warning
import xml.etree.ElementTree as etree

class WizardDeliveryReportEpt(models.TransientModel):
    _name='wizard.delivery.report.ept'
    
    date=fields.Date("Select Date",help="Display the selected date report.",required=True)
    datas = fields.Binary('File')
       
    @api.multi    
    def generate_delivery_method_report(self): 
        """ generate delivery method report as selected date wise.....
            @param 
            @return: Set the Date and genrate the report. 
            @author: Jigar v Vagadiya on dated 29-July-2017.
        """
        url="https://cig.dhl.de/services/production/soap"
        context = self._context
        context.get('active_ids')
        shipping_active_id = self.env['shipping.instance.ept'].browse(context['active_ids'])[0]
            
        root_node= etree.Element("soapenv:Envelope")
        root_node.attrib['xmlns:soapenv']="http://schemas.xmlsoap.org/soap/envelope/" 
        root_node.attrib['xmlns:cis']="http://dhl.de/webservice/cisbase"      
        root_node.attrib['xmlns:bus']="http://dhl.de/webservices/businesscustomershipping"  
         
        header_node = etree.SubElement(root_node,"soapenv:Header")
        authentification_node = etree.SubElement(header_node,"cis:Authentification")
        etree.SubElement(authentification_node, "cis:user").text = str(shipping_active_id.userid)    
        etree.SubElement(authentification_node, "cis:signature").text = str(shipping_active_id.password)   
         
        shipment_body_node = etree.SubElement(root_node,"soapenv:Body")    
        shipment_order_node = etree.SubElement(shipment_body_node,"bus:GetManifestRequest")    
        version_node = etree.SubElement(shipment_order_node,"bus:Version")    
        etree.SubElement(version_node,"majorRelease").text = "2.2"
        etree.SubElement(version_node,"minorRelease").text = "2.1"
        etree.SubElement(shipment_order_node,"manifestDate").text =str(self.date)
          
        headers = {"Content-Type": "application/soap+xml;charset=UTF-8", "SOAPAction": "urn:createShipmentOrder", 'Content-Length': str(len(etree.tostring(root_node))),}
         
        # print(etree.tostring(root_node))
        try:
            result = requests.post(url=url,data=etree.tostring(root_node),headers=headers,auth=HTTPBasicAuth(str(shipping_active_id.http_userid), str(shipping_active_id.http_password)))
        except Exception as e:
            raise Warning(e)
        if result.status_code != 200 :
            error = "Error Code : %s - %s" % (result.status_code,result.reason)
            raise Warning(_(error))
        api = Response(result)
        result=api.dict()
         
        fault_res=result.get('Envelope',{}).get('Body',{}).get('Fault',{})
        if fault_res:
            response_code=fault_res.get('faultcode')
            status_message=fault_res.get('faultstring')
            error = "Error Code : %s - %s" % (response_code,status_message)
            if response_code !="0":
                raise Warning(_(error))
        check_data=result.get('Envelope',{}).get('Body',{}).get('GetManifestResponse',{})

        response_code=check_data.get('Status',{}).get('statusCode')
        status_message=check_data.get('Status',{}).get('statusMessage',{})
        error_msg=check_data.get('Status',{}).get('statusText')
          
        error = "Error Code : %s - %s - %s" % (response_code,status_message,error_msg)
        if response_code !="0":
            raise Warning(_(error))

        lable_data=check_data.get('manifestData')
        # lable_data=' / hgaKeTOv2wDjVkVSYP6jF6spTOlEgJW3IMtrBtzCuIQ5ZqqENGtSN1EeIkElKjfgUx3xPqDuqXul + h5shV3eVLx9d9Q2qVox7V3SwrSO2opilREuPri6uzQDWuIFLUuwS51qg22A8yTJoralxALF88A7MdqmX + qHpaXQYanPb3MW / s37bj6R1YB / aUN + aLZ7uQoyeTxS9XwpP6Fx0U1Hz0eBT + bUc5Gp5KA + o / ksIc / c / +0 j0LXqDaiq7U1xazAlBbU / pD3nTU1uCEF4EPaewPsRfvxQmkdrhuHKr / S7QJ1c6Uvqc3uaplURvse7rUcpqLfj5QB5F9Q3WI7TIkBnggUj9fKNljjzuZkjMoUtnKS6vzU3PKprrCd0PHQ7xYFcJjBaxmNatZzWpWs5rVrGY1q1nNalazmtWsZjWrWc1qVrOa1axmNatZzWpWs5rVrGY1q1nNalazmtWsZjWrWc1qVrOa1axmNatZzWpWs5rVrGY1q1nNalazmtWsZjWrWc1qVrOa1axmNatZ / e + tdptU226F6qg / qT77mpmfUgezVPfNg0vlbETtNqfG9VVvWX0qtdlX7x6ou9WpH9Zz16uv + f591HJ7atdmtQE11CH2nc5C5YAr5pMa7vQitEmYHCUcje9ljq1r1qUWr1QSTQ6vFS473tOdJN6YgB9FoBovgXLGC6ofo05CqAhPDN8XtaY7QhhPlwQTUF + D + kqc7 + Jgx6jjoP5upvZVbUktVqiWTsXWdlggctB4mSooFRrUEJXYd0WNF6Mxa1IHFdQf2Y1qg3eccebX3GTRodpm33dhXWqNl5EBNVbUAS / mg + oWdy2oKQ6x3VkX1D9G7Q2qfRuwoo4Kr5GNTlRbLCOkvj0if7iMWj + qdnjBiJWp26rGEpBkKOpc1LKqr9epdqO6wztFLaraozqsSu1Q7cRMDXcEqoVIVW2wlVyfWlR130AOIIo6LdRufeo0U9MFP1EdRnX4QQ + XKFqTOs7Vsar9pP5W9ytUB13rkCxcxjuohmNyUL / SScb1qc2ovs14h9TdoI5fm6TWV / Nh5Taq8Q7WfDaPaoFR1sraxjBT26aoIX6yY9uYRLs + tZ + rZVXbqhYrVWunsNEuaodqOA5bAWrRi76oO4wNVxWpQi4DhXhQKyzRLWRexl6JLD6gGuhQ9ten / lbM1HCH1G9BLYoak / VVqaP4RqG8qD1GHPAxxI + G5JijoxoazGZN6iS + B / WPg1pnuiN + BrWt6oxdDd + sSt2Lt7C / f5nUeCcKqEkayB6bqu7F69WoPfU9gbyJVQ01Bd7pJTU + UJWTGlIZe7UiNd6C / G / 9 rLeD7oC1jbluhkT4n / nPK1H / xbVVfeADzTttznthsE + obelPOth + uJn6zNfM / KQaksR / 5 QPtxz + yXbEay0fnHvbP3Od5F + qZrz75KTVWC / FQv6Nf / GZcldqpI9VmTepCOvQk7AWeN0YrVDeH1OqxWnAd6nwomOsXpWaN6tX9sJrVrGY1q1nNalavVp1qnoXXxi7pY39w9kov9IrUqE2yoEoi4A / 6 wsNXSvJS6iSKOtFUJ3qyE / JgXvxQ3VxK7VAdJeQzKKeycbjvVKxOHWQOXzc5foX5Sy8O / c6hrVFcVO1l9kZASovdTUkcOhyhJM0nOO8urLZV3docWkwPobjYh1libHKa3W3KAXop9d9Q7SROGepCi1NDgsoHuqLCssusqrtL1XyotjgU6tqq1vnAZLK9 / ss1qL8CNQ0y0jQcfaiL1R9Q + 58 uqe7 / VNRlX8OODjg0g0UZ2x6c7ll75xtP89BwziIWGO / apHIsc9POr / 5 WZpoOYlANhToq7CL2osNa3L / Fl6Ci3kDpx8EwWdW + hfYp4LYLqNOg1jgVH2o / mprT4ZwiaHD8G9HVLvjGdpY + SlE7b3pU2xcv38eo4w8SCmowUWKVTGpoVABjSP0jtj1FLTqc / DKob0ENj + eXn8B6jDq8r + pmV9RJJvFzJ6DEdDTNdlALcdXgtL + 7 SAHWLhj4Pd83 / hJqf1XUicImLDISmpqrJup / 4 lHaoNiWCOWjxBkvtQ65hqNWZJfki / cTH6Xui7qn772oIQKUOKwBakXTEUkNdUacqXHCeb7FbRdQu6rOkxr2YlKJ5tx6Pak7nCQyqvGz2Xx7gokjx6h3vezLvm4Oqc2kzqQ2Va1Q3V1fSC2rOtGTi9pM6nZUN0Wti7rHJ1xOrWoJid9gxUtqj00Nqu1SHUAYmqrWCaOu63ARda + rOvwg2plaiNJELtRCaAyaJnWLU0suoIaCIfAkDagcrKn1dVX3YlS3ozoKQ + qkE05Hu7iaxnjn6jiq3aTGxJjUmGD6Hy6thrxA1xa9qsMhNXZA1CFhVOsLqmmCJw08j2o6ecbtqdHnmkENueYPp5gw9wVqM1O3o9pM6jBXvzKXUUNtULKCoqasgOprOgGlqktWUGYB9ILUEIzbHF + ZeFm1pQkVlIFh2ygXal3UlPRWdQe / jNNu1cXU6HMd7jbKdh + oKUd / oIbfEO061NizgDEfnpneDW0j5oZdUzskixoSH4fTbk / QSXmsGstHmV8LSa5tI / ay5t9dO9R8ESInVDf5H / 8 ANb6qz6TucNul1IZOJDDYeHwEiUidMMq9HtRJGNth0v5ee5rdTEsE0GRh3Hb2fj5BasoQxdg7WfJGBVt0UeNWUOOJHHTWo6KT7SFxFF0 + fyszqLEPIcx6gilHB / VPVZ2r2i7UGJPTtgupMbiIQ6 + 7 yqU / BFp0P6jxiXh8olrTfKkd1Tcin + D0n2PVGQK5vgwSBIH1M / Z7aExqqjqU6CNgd0NLFeH1oKZfOO / ROPK72mxj5QE38M + 7 nP8yDDaNM4puaHte9CXc5EupV / XDalazmtWsZjWrWc1qVrOa1axelxr7Us98Wt0LqLFbNMl / E7XrZl + HWJOaBhIPqGmwY6Z251vF7Bh1e5zarmpO8PFqtSI19dEdpZZbUc / u36RmPer + KfX857 / 7 Van1cWpa1ZbVz1GnbzapxnU97VuV3WuZyyTUHLFBKXUITVLFWSMrU + MaquIble3XuAopTkLNHo / Qqn6L42Fqber4ms6CwFk3uAopzad1M / UbHHuUq1O / kzR / JaG6TEIF / KT + UbT1dPU11Xw4RxXXU02Nl32ZhJrt1aTGD6LXp75qMq6nGmWUaT4JtaobXKHU0hGwohY9dDRJT0WV5GISalUrb3C6y8rUHucqG1yfD9ffm01CrWqNU5 / cEIOvRp331KZWFlVtRnVYUXztaO4QrppU1XjqXTep21F9vrWNP62 + LYsGknqYhEpLXExqW9SuXZfa0XJUoK6TUK1cqssEDLuibHcHKdhcjZNQ6UySB + pmRWogLdQ4T8TPoqdR3csVqcWeGiehxlmLPqqTWpfajOo6CZUyhfnReDjeXpN6qET21WddhegT6l7RGaRFPUxCpflB8 / qamqN2RWqclDq2jXU6JzXeM3W73 + e3AnVZBRZamKfV56yuP6VOGidbaw + xapDDJNQ9dWnKxZrUODs8KAvxtZPDJNRuT61z99hZ6pdRR5wdHsp5D3KYhKqwMoENuqhDE7qDZ9FfTo0nbOB6qkl8LYdJqIJamVEdqZVZmbqf1PagOq1OHUDd4CqwvXglh0mopJzU / frUHebe4oPK9p0cJqEOCyRWdVnmcU3q8vN3 + PMb / qNMQu33Gu90zmbxePXqfljNalazmtWsZjWrWc1qVrOa1az + D1T7vSfEg52Qi6X4aNUqUwc9sEcinl2NI0jYh4rnouN4gBcGZ7bQtmnmIc6cHIf / aZKRoiGcMqBnz62OpJZFj2qLakHLT2Y7XIQZZ + uMC5EmUU66pz4pHMaJZ1 / pLkxqSWpB6nZQm + GzTep6vWY60z4P + vOqcU0C2mG0yE2LKxOg2pSxsGEtAuzhHndp + IrUXS9seyG1U2mhTk1aqMvYqJf9pMZRsZBtSysVXUYNdcHfssfVspIgtcz / L2qnaZvFlVbps + n867h8Ki6r + TsuwoEXtfoKnrY7u5oON6z9mr6oaUgG12vBZR + GepAmaQ + 1 H / YPl0tyQdWHsxT / cn71UGfjFaMfqusRSMO7kxrHeXEVmrqiSz63ui + rWNhRHQc1brP18fqN / LSnNulSatqXtxbXU7MLNW6b1PSN1Nk4lqZAXVJdSsCt68YSIge1Q3XZy8Xu / aAuy0Lh0PuF1FRH7Fw7qhtSG9o2qumzuTpfay3qa1KX + hobc5wfd13UdlLfDuquLHfm2 / 6 iaomXOuxr2whlW4MYty3Vu7AWdZmmgIutNbToE83DiRrKBW4b1PUbqfMQLS2IR1fQvKwaF6GNNXqS5UpbuG1PXScRuXWoexzux5CDItWGgmfatlTX + SNYNjAez5dW66DH + JoWH1Jl21KtqhqiJ6qn3WXVCQOKIZcJZXI7bVuoaflUUmtBK8pdWm3KgtekThRfd7RtqdY1BQs1afOrUJd9DZVI1BA8P66O4huNE + UuqKaJtAb + arwps9 + swlaGto3qcfnUkje + pUPgwq0Mzh7KTahqrzAOoW2LVma6trGAIu + 6 S6tDUZc6JAdQRxUeqOM0X6scqJdXQxQSS30NhaaqG4qe8kw9vBZ8wAZrwItFT81RarGnxrXzL6ju67KXoE6lRcc5ZzopX / KEWVZAy6cOaqy6L5jL1GUvxRDzFXVUtM0OJyTRRWi6Ushzvfj0BdXk8Rjp1xwdp4dXtZ1lu21dPnXoW6DFQLH5vJC6zb87rCpqLoMND9R8irbZXC + xYU3 + Fy2fmoe + hcuqrc43t1WN / RyRaj6nbova1jBP5Ts / nXxi6aw26sW5jNpB3bHDvYdrv4LlrXbYwmjaNvbzeZGkG2aO / z3TBSMM9ZhdRg1vr65xL2LkierSO6lp29inim3O7XB6ki9Lr + KcyjaXkzmbM6tDUXtUm0ltaJsdrgsSizpUtSR16Qm + iBqiC00tBuw / XdQdRqq0bbxyGexWtRtOYPN0So0oM0Evo8YIVc3U70RD69iqotbjCIe5ntSmqL28mNrvnXPkDp4XE5r9vsF8ylNoeLyR1axmNatZzWpWs5rVrGY1q1nNalazmtWsZjWrWc1qVrOa1axmNatZzWpWs5rVrGY1q1nNalazmtWsZjWrWc1qVrOa1axmNatZzWpWs5rVrGY1q1nNalazmtWsZjWrWc1qVrOa1axmNatZzWpWs5rVrGY1q1nNalazmtWsZjWrWc1qVrOa1axmNatZzWpWs5rVrGY1q1nNalazmtWsZjWrWc1qVrOa1axmNatZzWpWs5rVrGY1q1nNalazmtWsZjWrWc1qVrOa1axmNatZzWpWs5rVrGY1q1nNalazmtWsZjWrWc1qVrOa1aje4I9hNatZzWpWs5rVrGb1f4KaswJWs5rVrGY1q1nNalazmtWsZjWrWc1qVrOa1axmNatZzWpWs5rVrGY1q1nNalazmtWsZjWrWc1qVrP6y9VJmPov / 9 hv96J5uNGPv7f / E0V7OnWCJ3sD7y5yEPhGQijY7HB2sYKtHQKaAhQ6wb9sB / cdYAV + kvKMnIwfPwj + Pjzj0Id8YbUraomOhRrvBHp / C3dQLfKkjofUEj6NhKefXi2KWqBjoca3DiKX3YrqviG1JrUf1e2oDqTuxenV / aDuwp5aDOq0VCtSu0Ed2 / u5Oql0BnUa1K3fV3e4R7tMj6I6yZlaTOrbUd2gOp5FbYraeBEPq73QDtXwMKolquErSg / Usarfn1wdwQxfrRMGduINPYB702uL1QqpHSBRHTSp6bBMQmdf1N2kxqNUwx6 / P7kaymsOqge1zr + XqkDjn4RqRzewd38FtS9qUdRt7kkdurv5K4Ja5v89uVriO6sMpWBsbUjdj2qLBQfVZlLHUjxIfb2nVqdsG4s6VLXVdqnO2PZRMYHCQGrXFnWXRalcHqq7HIw / o9o9UON9izfUdIPadkXdono84EK + nlr + 9 aipqKBa5EmNzWB9dj2GY7sadQOH6KDuB7XZUxellfRM355F3YxqfVhd6mVQN1UNRZ5qx4W6x / cuankGtRjVak8NX7mcqaFpPKC2ojSpEVsl + BpA3ZxeTVUYqZ08oIavO9GLpgZbTlIrVOs9NQW78PW4LohzqM2gFns13546VPWP8pAaQgAzqNuTq7FpLvW1HxqOQd1BUAEHa6xq3Dyqx4NAVLVTsAn / z / HRJOcl1bKozZhSDW3jvtoU9Ztmrs67nv7pNPyaK2p1cjUd + 9 iiw3Gp8iIOAeRcDU0jqd + Khfq6pw9rTajq9JmB6hfmMi2oIRqKw7sVdaCgIjY1d0yNrep3pB5LwXUq6hYPDgVpYy / GGOV0agsFIyg4hNLw26Sm0H6hRktRdwfUAtUe1bQfTp / tqpKB9cO7VTWWdyj2g5oeRfV70c7VN1XdQc0IDQym8kKfXB2AR9ku7fWZWu + r69HYLtUqtSVwgpjXS0jR4XfVydVYnAOVB1f3UVWbfbUe1GahjpM6kBr3w6nV / dAfkodKpKoxAWtRMxyNg9rqR9UNqtMZ + kNy6VRAUt1H075eqmvb2LqqLlWFrmr84LFJqgZSp1ZDwByoshq68ya161A91NdyUKtSX5O617HbU8MB0p1cHVBNJdrO1BojDexlaMe2sUaqEIou1GGmFqnEJKdXJ2gW1bxTtagxuF + oQ80K2jBTYycQHgFFnUTUn9 + p + lnqvqr7UR321RjQmfRA3ZSY71F1OoM6j + o4V2NqVtUlK8BInNSQAJR + s4WaniR + MfTKZ1DboQuj9oFVdVPC0FGNe5DUaaaOC3Vf1PnzYtXPVHdPqWPtgtRj3ijMQ / XQfT2o35xD7R5XY3HGBlNPOXrpMWuxPsaUtqjbmTqLH9tLqzsKKrALsPaHVDW + DVaDZQykdl + XonxOtRnVy36 + oh57zKya1GFS387V9a / THY342k + r01LtZFXb0s + 3 VJfcoBaU06oxP3lEDQ5s6KACtID / J / apNlXtBDUkRV27r + 3 Z1JB + tb + N9fWfl / U1FPeqxn72uz01jlKScOi + huLzr6L++0 nra3gjKNoBKrKW1Lvsm6U66qE / spc4ViCq2qNaDerSpQrF546GFbLv4gnjENiHAdQyVLU1i + gJquSqxjEaVEeKWkEdaFzmw0JdUjZSK39S9TRoV + LLeXwNalnVoaoxjx / U4xjY0H1d1L6ORJ4uvi55OKWMg1rN1b4JFBFSrFHUpqjjbLxx7L4u6mZI70 + mpjeilHFQ67k6DOq + qvtBnWZju0P3dZqrT5g3lgSWRnQHdbtQC9 + W2nAcR9eTOu6p + 5 J6yiG9P5k6Y5YVBfXilGK + 6 J2M4ucazGHqS3MWVFH3Zc4ClYP7qi4ZfpC1T / iEaspdrBh3vXq07ZeHfnlpS + NzTtrPt5ofVrOa1axmNatZzWpWs5rVrGY1q1nNalazmtWsZjWrWc1qVrOa1axmNatZzWpWs5rVrGY1q49V9 + JK49ldTjTxvRART03EmbEmmmTwjIbrbMVH0cHfO1w6KFzBn / c4AVG8Fy2elqY8PVkkg4uzCHONv4KzQXOvLT4pCHWLExhji / +VV5dZ0gn1XU7wqx + FhF / pcW2BIPRtbFjNalazmtWsZjWrWc1qVrOa1axmNatZzWpWs5rVrGY1q1nNalazmtWsZjWrWc1qVrOa1axmNatZzWpWs5rVrGY1q1nNalazmtWsZjWrWc1qVrOa1axmNatZzWpWs5rVrGY1q1nNalazmtWsZjWrWc1qVrOa1axmNatZzWpWs5rVrGY1q1nNalazmtWsZjWrWc1qVrOa1axmNatZzWpWs5rVrGY1q1nNalazmtWsZjWrWc1qVrOa1axmNatZzWpWs5rVrGY1q1nNalazmtWsZjWrWc1qVrOa1axmNatZzWpWs5rVrGY1q1nNalazmtWsZjWrWc1qVrOa1axmNatZzWpWs5rVrGY1q1nNalazmtWsZjWrWc1qVrOa1axmNatZzWpWb++H1axmNatZzWpWs5rVrGY1q1nNalazmtWsZjWrWc1qVrOa1axmNatZvX11wDFsgTdRaLi9p61OdHVzFLnewI818AvCjK / d4m0Sqt5kj6 / jy + Y8PobD5L2Q9SUE3jHPVFt4jyjwjTwiexqI7wW + bsLNDv / lytuQweL7O3xC + Zjl9 + gG3qzDJyh65SjxI4qyCwI9VF851Gd8ubq8PaosvTupYYOit2xhq87lBjc39WmuvLksnxtAdEOkXlRTKJ8On2DKa5VXNvUjPkMN70GzKDQ + s8m9GNQS9x + 8E xkqJBSDqOr65rZ8OLhJ + DppUHtZn4xbgyhfF / 3 tPnmwfeIJ9B60axOq46huCqdHP91QWRj2qpu9ucV / 2 / qdKXSNavhFUXZ + EOXrcvXJ3bPUsYEvMrYObkS3G9Uq4D7SoU0CjiW6wbc0sEOvE5V2fPP39Oa2AxDdBOUVlLG + qOE14akuJ3yL0FnaalU0WVw9Ux1UavIfWAYB9tuoBi1WEX0bZS8y3eBbtq7Nf8mDWnQW3 / w6O11uvIYjEOB / Lcc5qnOE304y / xO3l1rIwIvZ9nlqTSAgB3zV + IrUf8DX2pUHFODohvaqM + WdHVWM5c3 / giC68QZ8bqjVoFRhNQIvkZp6cGZ6Hain3PPUXmd8Aryux3IX03B0i668lwIr3RCTngQul8ubm / qFlRvfgnrcjaAuD9QdI + ngxxv5bLWhjz + o8wM1FNmWbugtw0yNv7Ov7id1P6jrjlmo / fPUILBFXfbbTE1vA2 / pWroparVU64fq4UBLX8vyOKq7qqaXP7O6Warlk + r4alCbk6jbom731fXrdYZu6LE4UwMj7KnxaBzeL7yWpQTVHVPUMr / E0Qi / TuqhPM7UpVAaVJtRLcvvDGq1VOuk + rnamWnH0AceCrfrXmJfx0fVe / taUrX9mFrFSe3fLdVhpi4V / bPVQ922UOtH1NiiH1QHGXU / vID7WCu4 + halZlUlwrX5JdQe2 + RmpqZaDo6ZuTqWZgP3pqtMNVT6dBNEMH2TykaLLQ7ybCmEtN8hVDAYKjQvoobmTnwQ7ULttVCH1BiTuOaQOoof29T48o4NHivvhBnUFKkGZTES / Eo + X43RL4SkvwgzqbEy / lZQ3eU03YzqkhWYmXoovhA2QttU8qCifit0VXvaGlSJzp + ZFWATYOhJ4ifKpJohFsz + G0HNitV0M6gDhpz4vpPa1ugEYlJ4gRJJ9xgz2R + FLOoauIevMUj1JWp9jhqTONx9oJaTGmIdVGNFIjTdFHVD3wuoZTn8pvwRb4CGajQlVdQNqSHOU4O6naeeX6hW / bCvhZuroUiL70EtUS0Xal0yq5m6qzdYQoQkddSoFj + P6rKvxStSP7OEQGVFaijXCg + zQQ0lB44q0cYmCU03k1qWJH5Ul5BIUGJkkjAUSUdsJ61MYlCXcg1VNSZBz6xDIGkiNRRvjZnAoIZjCxJfCwiBD4i5mkJb0Y7qNFSZkZ7b0tZAaoUtSlUbUuNxbZ + bN8Ib / YQ1H5Rc08 / UeNRj2wbgH8vNoMZUDXftpC6xP / YjfCtUGsIuirUx3CN1pjKGvS94 / PtnZmCwD6iVkZhvzdQCizzucfhU9WZqZVqqMsY6hBpRvPFGYJEowUqHalPVeACrepBD8xnE86InOOwpDmmwDoA9UNX4l6c2xgqs0sWslRkqulE9VNfQFDpU02s4LHoW25iqLuUGq54k03PVTtVIdaFGXVF7iUVcztVVOaop7qLd2YbmUXWcqfOnqr5PqWNLaoHkSY0cJOucDDZ6htRDpEppmA5D9DRWfLaD2qaZqxFsa1jZDLELhFD2meo8pIR2rsbIIugxuc2LmK + GHUPMN1Z88BJJ9HM1Re9T4kExH6mdfra6e6hG5Khu680j6rHig5foj1T7Z6tFVc / LdY256cXHYjtkYDO1nld8WPGIfl6uCTylpjUmh98KJ1HjtkPqsFTTv4acYKmmrG5QixOoayrX5rG + HrqdKFu13VCMluo09RzUGzyg4b8kB7XH3exn6oTfDx6Sz1X3B9RDGST1WEUMvTiltOuhF2c8Wh9Tj91bL6guXRSgnrXow7eJlqmKGHrMas0y9Jjtq0uLPvSXYP7Zi9lB619ODfW1R0ZVD30XtcdpVHdl51JpN + X7mZV7DP4brLTVoA64m4OiDJjq6x6 / nyiHrrYvV8Nr / E6pC37lVQ1xHfXzjTVW2Ux9qt2YutQ + VYG96nRj8YPbNkxq7GigPtV / lBadvtPYPFf9GzbcAWMxqEflQt3Tt01d2zW4o9aZUrY / 9 xQAlCI / qTWVqloZJwwAqI6Hrfc04JEpmIov0H + Nffza4liBl3Voo6izeI3dZhDE0g0WjW9xa8RhmA841vG6lJtR7SS8hJd2VCfxC440UNd2yV / st6JNeJrs89RlMKuMy6ilGoP3OI021XGZ8aFhXGZS + zoCYwb1MKpDDw3jMl0vnjsuE0r2CS85jIZNakfDS + PIHm5uCDmM8pUxpkkd6ku0g3oYQcPxsvISvqSoz8xlaPSy7B5RxksntS87vx0hkXL5MjxGQ6BqqY51 + C6PalsGMtsyCkivLOtvP0 / dVDoNwS7Usey5XG6oBhjGHmnYNJUvfVL39LwhlU2yjk572gNiGqJ + dn9ISefE2N / 5 IEKh49CqKagN1IUuxsB6mWIMjdC8MShpm55eIn2qWPNMC1azmtWsZjWrWc1qVrOa1axmNatZzWpWs5rVrGY1q1nNalazmtWs3oR6gz + G1axmNatZzWpWs5rV / wlqzgpYzWpWs5rVrGY1q1n9760W2tEJUS4JY + nssC6KJppcFkBM2klWs5rVrGY1q1nNalazmtWsZjWrWc1qVrOa1axmNatZzWpWs5rVrGY1q1nNalazmtWsZjWrWc1qVrOa1axmNatZzWpWs5rVrGY1q1nNalazmtWsZjWrWc1qVrOa1axmNavPpj7nD6tZzWpWs5rVrGY1q1nNalazegtqr3IvWngN + HeAf3abUNsGEnFd5B7yc7MJtWiyFzIn5KJab0Hdq9vsOtjf74HrcujVFtTJ / JF3yM3Atfn3vA01FOdrKBo + 35 Qj8norapVDd4 / czahjm3sNt7f5LvffwYa7LanvgJvebEidDPx / l29z / GUraiLD / 9 f5vqi3cTTqSR3CVtTQqozq++2 oGzogSX2L6k20Mll0VI1gS3OH6k3EIdkZUt9g6wjqfhtqr0e1DlSnbEEd1UINd7agTs2g7g2owzZymdwMR2NqQX27kWzXpVrzRQGJzPVG1H5oZUitNqIOH2fqM1Z8L6GGmC + h2mxFfVXi61vsD0ntptSYy4A6bkbdlbyR1Gesrp + pzjJ7UN + QOm9C / Qe05GN / SIA7m1DH7hbMOyrdqBZyE + razxe / N5tSw7EIfxL2qW5GnWgalikd15tRZ9dhr + RZg72XqPku9sNqVrOa1axmNatZzWpWs5rVrGY1q1nN6m2oN / nz / wHOIWb9CkJcBAAAAABJRU5ErkJggg =='
        label_binary_data = binascii.a2b_base64(str(lable_data))
        self.write({'datas':label_binary_data})

        file_name='DHL-%s.%s' % (self.date, "pdf")
        return {'type' : 'ir.actions.act_url',
                'url': '/web/binary/download_document?model=wizard.delivery.report.ept&field=datas&id=%s&filename=%s'%(self.id,file_name),
                'target': 'self',
                }